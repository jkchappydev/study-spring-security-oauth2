server:
  port: 8081

#spring:
#  security:
#    oauth2:
#      client:
#        registration:
#          keycloak: # ??? ?? (?? ???? ?? ?????, ???? ???)
#            client-id: oauth2-client-app
#            client-secret: 8p0CimPZZlSVy1j9SQb4C00T1XqTToKJ
#            client-name: oauth2-client-app
#
#            # ????? ?? ??? ???? ??, ?????? ??? (????? ?) ??
#            # login/oauth2/code ? ??? ?????? ??? ? ? ????? ??? ?? (??? ????, ?? ??)
#            # keycloak? registration ??
#            redirect-uri: http://localhost:8081/login/oauth2/code/keycloak
#            authorization-grant-type: authorization_code
#
#            # OAuth2 Client? ?? ?? ?? ? ?? ??? ??? ????? ??? ???? ??
#            # http Authorization ??? Basic base64(client-id:client-secret) ? ??? ??
#            # client_id? client_secret? Base64? ????? ??
#            # client_secret_basic ??? client_secret_post, client_secret_jwt, private_key_jwt, none ? ??
#            client-authentication-method: client_secret_basic
#            scope: openid, profile, email
#        provider:
#          keycloak:
#            authorization-uri: http://localhost:8080/realms/oauth2/protocol/openid-connect/auth
#            token-uri: http://localhost:8080/realms/oauth2/protocol/openid-connect/token
#            issuer-uri: http://localhost:8080/realms/oauth2
#            user-info-uri: http://localhost:8080/realms/oauth2/protocol/openid-connect/userinfo
#            jwk-set-uri: http://localhost:8080/realms/oauth2/protocol/openid-connect/certs
#            user-name-attribute: preferred_username # registration.keycloak.scope ? profile? ??? ??? ? ??.